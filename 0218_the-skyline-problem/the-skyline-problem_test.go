package main

import (
	"reflect"
	"testing"
)

func Test_getSkyline(t *testing.T) {
	type args struct {
		buildings [][]int
	}
	tests := []struct {
		name string
		args args
		want [][]int
	}{
		{
			"1",
			args{
				[][]int{{2, 9, 10}, {3, 7, 15}, {5, 12, 12}, {15, 20, 10}, {19, 24, 8}},
			},
			[][]int{{2, 10}, {3, 15}, {7, 12}, {12, 0}, {15, 10}, {20, 8}, {24, 0}},
		},
		{
			"2",
			args{[][]int{{0, 1, 3}}},
			[][]int{{0, 3}, {1, 0}},
		},
		{
			"3",
			args{[][]int{{0, 2147483647, 2147483647}}},
			[][]int{{0, 2147483647}, {2147483647, 0}},
		},
		{
			"4",
			args{[][]int{{0, 2, 3}, {2, 5, 3}}},
			[][]int{{0, 3}, {5, 0}},
		},
		{
			"5",
			args{[][]int{{1, 2, 1}, {1, 2, 2}, {1, 2, 3}}},
			[][]int{{1, 3}, {2, 0}},
		},
		{
			"6",
			args{[][]int{{2, 9, 10}, {9, 12, 15}}},
			[][]int{{2, 10}, {9, 15}, {12, 0}},
		},
		{
			"7",
			args{[][]int{{0, 3, 3}, {1, 5, 3}, {2, 4, 3}, {3, 7, 3}}},
			[][]int{{0, 3}, {7, 0}},
		},
		{
			"8",
			args{[][]int{{3, 10, 20}, {3, 9, 19}, {3, 8, 18}, {3, 7, 17}, {3, 6, 16}, {3, 5, 15}, {3, 4, 14}}},
			[][]int{{3, 20}, {10, 0}},
		},
		{
			"9",
			args{[][]int{{2, 4, 70}, {3, 8, 30}, {6, 100, 41}, {7, 15, 70}, {10, 30, 102}, {15, 25, 76}, {60, 80, 91}, {70, 90, 72}, {85, 120, 59}}},
			[][]int{{2, 70}, {4, 30}, {6, 41}, {7, 70}, {10, 102}, {30, 41}, {60, 91}, {80, 72}, {90, 59}, {120, 0}},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := getSkyline(tt.args.buildings); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("getSkyline() = %v, want %v", got, tt.want)
			}
		})
	}
}
